on:
  push:
    tags:
      - '*'
name: Release
jobs:
  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-latest
    container: debian:buster
    steps:
      - name: Install git
        run: |
          apt-get update
          apt-get install -y git
      - name: 'Workaround: mark every directory as safe for Git'
        run: git config --global --add safe.directory '*'
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.x
          check-latest: true
      - name: Install cgo dependencies
        run: |
          apt-get install -y \
            build-essential \
            gcc-aarch64-linux-gnu \
            gcc-arm-linux-gnueabi \
            gcc-i686-linux-gnu \
            gcc-mips-linux-gnu \
            gcc-mips64-linux-gnuabi64 \
            gcc-mips64el-linux-gnuabi64 \
            gcc-mipsel-linux-gnu \
            gcc-powerpc64le-linux-gnu \
            gcc-riscv64-linux-gnu \
            gcc-s390x-linux-gnu \
            gcc-x86-64-linux-gnu \
            libsystemd-dev
      - name: Set build info
        run: |
          echo "USER=$(whoami)" >> $GITHUB_ENV
          echo "HOSTNAME=$(hostname)" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: v2.5.1
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USER: ${{ env.USER }}
          HOSTNAME: ${{ env.HOSTNAME }}
      - name: Prepare artifacts for Docker
        run: |
          mkdir -p dist/docker
          mv dist/postfix_exporter_linux_s390x dist/docker/postfix_exporter_linux_s390x
          mv dist/postfix_exporter_linux_amd64_v1 dist/docker/postfix_exporter_linux_amd64
          mv dist/postfix_exporter_linux_arm_7 dist/docker/postfix_exporter_linux_arm
          mv dist/postfix_exporter_linux_arm64_v8.0 dist/docker/postfix_exporter_linux_arm64
          mv dist/postfix_exporter_linux_ppc64le_power8 dist/docker/postfix_exporter_linux_ppc64le
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: docker-dist
          path: dist/docker

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: goreleaser
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install QEMU
        uses: docker/setup-qemu-action@v3
      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: docker-dist
          path: dist/docker
      - name: Set up Docker Build Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable=${{ !contains(github.ref_name, '-') }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: ${{ steps.meta.outputs.tags }}
